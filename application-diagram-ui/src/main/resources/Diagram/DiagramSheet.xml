<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.2" reference="Diagram.DiagramSheet" locale="">
  <web>Diagram</web>
  <name>DiagramSheet</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1493978161000</creationDate>
  <parent>Main.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1547804940000</date>
  <contentUpdateDate>1547804940000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity}}
#if ($doc.getObject('Diagram.DiagramClass'))
  #if ($xcontext.action == 'edit')
    {{include reference="Diagram.DiagramEditSheet" /}}
  #else
    {{include reference="Diagram.DiagramViewSheet" /}}
  #end
#end
{{/velocity}}</content>
  <object>
    <name>Diagram.DiagramSheet</name>
    <number>1</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>ad4bd9bd-2932-40c3-a7b9-5caae1266b43</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>/**
 * Generic helper methods.
 */
define('xwiki-utils', ['jquery', 'xwiki-meta'], function($, xm) {
  var getAttachmentURL = function(attachment, action, queryString) {
    var docRef = xm.documentReference;
    if (typeof attachment !== 'string') {
      docRef = attachment.parent;
      attachment = attachment.name;
    }
    if (typeof queryString === 'object') {
      queryString = $.param(queryString);
    }
    var attachmentURL = new XWiki.Document(docRef).getURL(action || 'download') +
      (docRef.name == 'WebHome' ? docRef.name : '') + '/' + attachment +
      (queryString ? '?' + queryString : '');
    return attachmentURL;
  };

  var uploadAttachment = function(blob, fileName) {
    var doc = new XWiki.Document(xm.documentReference);
    var url = doc.getURL('upload');
    var formData = new FormData();
    formData.append('filepath', blob);
    formData.append('filename', fileName);
    formData.append('form_token', xm.form_token);
    // The default redirect adds more time for the upload and we don't need to render those pages.
    formData.append('xredirect', doc.getURL('get', 'outputSyntax=plain'));
    return $.post({
      url : url,
      data : formData,
      processData : false,
      contentType : false
    });
  };

  var deleteAttachment = function(attachmentName) {
    var attachmentURL = getAttachmentURL(attachmentName, 'delattachment', {
      'form_token': xm.form_token,
      'xredirect': XWiki.currentDocument.getURL('get', 'outputSyntax=plain')
    });
    return $.post(attachmentURL);
  };

  return {
    getAttachmentURL: getAttachmentURL,
    uploadAttachment: uploadAttachment,
    deleteAttachment: deleteAttachment
  };
});

/**
 * Utility functions used in both view and edit modes.
 */
define ('diagram-utils', ['jquery', 'mxgraph-common'], function($) {
  //
  // Get a XML diagram from hash.
  // The hash begins with 'R' &amp; continues with the encoded diagram.
  //
  var getDiagramXMLFromURL = function(url) {
    let hashIndex = url.indexOf('#R');
    if (hashIndex &gt; -1) {
      // Exclude first 2 letters from hash (#R).
      let hash = url.substring(hashIndex+2);
      try {
        let decodedData = decodeURIComponent(hash);
        let graph = new Graph();
        let rawDiagram = graph.decompress(decodedData);
        return rawDiagram;
      } catch (e) {
        console.error (e.stack)
      }
    }
    return null;
  };

  var urlParam = function(parameter, url) {
    var results = new RegExp('[\?&amp;]' + parameter + '=([^&amp;#]*)').exec(url);
    if (results === null) {
       return null;
    }
    return decodeURIComponent(results[1]);
  };

  var getParameterValueFromURL = function(parameter, url) {
    if (typeof URLSearchParams === 'function') {
      return new URL(url, window.location.href).searchParams.get(parameter);
    }
    // IE will get here since it's not supporting URLSearchParams.
    return urlParam(parameter, url);
  };

  //
  // Load the translation file and the default theme.
  //
  var loadTranslationAndTheme = function() {
    var deferred = $.Deferred();
    mxResources.loadDefaultBundle = false;
    var bundle = mxResources.getDefaultBundle(RESOURCE_BASE, mxLanguage) ||
      mxResources.getSpecialBundle(RESOURCE_BASE, mxLanguage);
    // The theme is important because it controls how the shapes are rendered.
    mxUtils.getAll([bundle, STYLE_PATH + '/default.xml'], function(response) {
      // Adds bundle text to resources.
      mxResources.parse(response[0].getText());
      deferred.resolve(response[1].getDocumentElement());
    }, function() {
      // Failed to load the translation file or the theme.
      deferred.reject();
    });
    return deferred.promise();
  };

  // Adds draw.io version into clipart paths when editing or viewing a diagram, since the saved links are relative.
  // This is needed as a fix for: https://github.com/xwikisas/application-diagram/issues/11
  var addLibraryInfo = function(diagramXML) {
    var newPrefix = 'image=' + "$services.webjars.url('org.xwiki.contrib:draw.io', '')" + '/img';
    diagramXML = diagramXML.replace(/image=\/img/g, newPrefix);
    return diagramXML;
  };

  return {
    getDiagramXMLFromURL: getDiagramXMLFromURL,
    getParameterValueFromURL: getParameterValueFromURL,
    loadTranslationAndTheme: loadTranslationAndTheme,
    addLibraryInfo: addLibraryInfo
  };
});

/**
 * Handles links to wiki pages (this is used by both the diagram viewer and the diagram editor).
 */
define('diagram-link-handler', ['xwiki-utils', 'draw.io.common'], function(xutils) {
  // See https://about.draw.io/interactive-diagrams-with-custom-links-and-actions/
  // See https://desk.draw.io/support/solutions/articles/16000080137
  // See https://jgraph.github.io/drawio-tools/tools/link.html
  var xwikiCustomLinkPrefix = 'data:xwiki/reference,';

  var getResourceReferenceFromCustomLink = function(href) {
    if (typeof href === 'string' &amp;&amp; href.substring(0, xwikiCustomLinkPrefix.length) === xwikiCustomLinkPrefix) {
      var resourceReference = href.substring(xwikiCustomLinkPrefix.length);
      var typeSeparatorIndex = resourceReference.indexOf(':');
      if (typeSeparatorIndex &gt;= 0) {
        return {
          type: resourceReference.substring(0, typeSeparatorIndex),
          reference: resourceReference.substring(typeSeparatorIndex + 1)
        }
      }
    }
    if (href) {
      return {
        type: 'url',
        reference: href
      };
    }
  };

  var getCustomLinkFromResourceReference = function(resourceReference) {
    if (resourceReference.type === 'url') {
      return resourceReference.reference || '';
    } else if (resourceReference.type) {
      return xwikiCustomLinkPrefix + resourceReference.type + ':' + (resourceReference.reference || '');
    } else {
      // An empty link usually means that the link should be removed.
      return '';
    }
  };

  var originalHandleCustomLink = Graph.prototype.handleCustomLink;
  Graph.prototype.handleCustomLink = function(href) {
    let actualHref = href;
    if (href.substring(0, xwikiCustomLinkPrefix.length) === xwikiCustomLinkPrefix) {
      let resourceReference = getResourceReferenceFromCustomLink(href);
      switch (resourceReference.type) {
        case 'doc':
          let documentReference = XWiki.Model.resolve(resourceReference.reference, XWiki.EntityType.DOCUMENT,
            XWiki.currentDocument.documentReference);
          actualHref = new XWiki.Document(documentReference).getURL();
          break;
        case 'attach':
          let attachmentReference = XWiki.Model.resolve(resourceReference.reference, XWiki.EntityType.ATTACHMENT,
            XWiki.currentDocument.documentReference);
          actualHref = xutils.getAttachmentURL(attachmentReference);
          break;
        default:
          actualHref = resourceReference.reference;
          break;
      }
      actualHref = 'data:action/json,' + JSON.stringify({'actions': [{'open': actualHref}]});
    }
    return originalHandleCustomLink.call(this, actualHref);
  };

  var originalGetLinkTitle = EditorUi.prototype.getLinkTitle;
  EditorUi.prototype.getLinkTitle = function(href) {
    if (href.substring(0, xwikiCustomLinkPrefix.length) === xwikiCustomLinkPrefix) {
      let resourceReference = getResourceReferenceFromCustomLink(href);
      return resourceReference.type + ':' + resourceReference.reference;
    } else {
      return originalGetLinkTitle.apply(this, arguments);
    }
  };

  return {
    getResourceReferenceFromCustomLink: getResourceReferenceFromCustomLink,
    getCustomLinkFromResourceReference: getCustomLinkFromResourceReference
  };
});</code>
    </property>
    <property>
      <name>Code used in both view and edit modes</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>Diagram.DiagramSheet</name>
    <number>0</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>b73d218d-1ebd-484b-91e1-d9a9cac2ea56</guid>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <contentType>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>contentType</name>
        <number>6</number>
        <prettyName>Content Type</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>CSS|LESS</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </contentType>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>/* The diagram styles should be loaded after the skin and before our overwrites. */
@import url("$services.webjars.url('org.xwiki.contrib:draw.io', 'styles/grapheditor.css')");

/**
 * Diagram Editor and Dialogs
 */
.diagram-editor {
  height: 600px;
  min-height: 20px;
  position: relative;
}

.diagram-editor input[type="checkbox"], .diagram-editor input[type="radio"],
.mxPopupMenu input[type="checkbox"], .mxPopupMenu input[type="radio"],
.mxWindow input[type="checkbox"], .mxWindow input[type="radio"],
.geDialog input[type="checkbox"], .geDialog input[type="radio"] {
  vertical-align: text-bottom;
}

.fullScreenWrapper .buttons &gt; .buttonwrapper:first-child {
  /* Hide the "Exit Full Screen" button. We have a tool bar entry for this. */
  display: none !important;
}

/**
 * Overwrite XWiki skin styles
 */
.diagram-editor *,
.mxPopupMenu *,
.mxWindow *,
.geDialog,
.geDialog * {
  box-sizing: content-box;
}

.mxPopupMenu,
.mxWindow,
.geDialog {
  /* We need the same font size as on draw.io because the dialog height is hard-coded. */
  font-size: 10pt;
}

.diagram-editor button, .diagram-editor select,
.mxPopupMenu button, .mxPopupMenu select,
.mxWindow button, .mxWindow select,
.geDialog button, .geDialog select {
  box-sizing: border-box;
}

.diagram-editor input[type="text"],
.mxPopupMenu input[type="text"],
.mxWindow input[type="text"],
.geDialog input[type="text"] {
  font-size: inherit;
  height: auto;
  padding: 1px;
}

.diagram-editor img,
.mxPopupMenu img,
.mxWindow img,
.geDialog img {
  vertical-align: baseline;
}

.diagram-editor hr,
.mxPopupMenu hr,
.mxWindow hr,
.geDialog hr {
  margin: 0;
}

.mxPopupMenu table,
.mxWindow table,
.geDialog table {
  margin-bottom: 0;
  width: auto;
}

.diagram-editor table &gt; tbody &gt; tr &gt; td,
.mxPopupMenu table &gt; tbody &gt; tr &gt; td,
.mxWindow table &gt; tbody &gt; tr &gt; td,
.geDialog table &gt; tbody &gt; tr &gt; td {
  border-top: 0 none;
}

.geDialog table &gt; tbody &gt; tr &gt; td {
  padding: 0;
  vertical-align: baseline;
}

.geDialog h3 {
  font-size: 1.17em;
  font-weight: bold;
}

.geDialog input[type='checkbox'] {
  vertical-align: baseline;
}

.geDialog label {
  display: inline;
}

.geDialog textarea {
  padding: inherit;
}
/**
 * Diagram Viewer
 */
.diagram {
  min-height: 25px;
}

/**
 * Diagram Macro
 */
.geDiagramContainer,
.diagram-container &gt; .thumbnail {
  max-width: 100%;
}

.diagram-container &gt; .thumbnail {
  display: inline-block;
}

.diagram-container &gt; .thumbnail .box {
  margin-bottom: 0;
}

.diagram-container &gt; .thumbnail svg {
  max-width: 100%;
}</code>
    </property>
    <property>
      <contentType>CSS</contentType>
    </property>
    <property>
      <name>CSS</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>Diagram.DiagramSheet</name>
    <number>1</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>bef74954-ef73-4515-8520-f27c329a504f</guid>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <contentType>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>contentType</name>
        <number>6</number>
        <prettyName>Content Type</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>CSS|LESS</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </contentType>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>/* Overwrite the graph editor styles that affect the XWiki UI */
body.geEditor {
 font-family: @font-family-base;
 font-size: @font-size-base;
}</code>
    </property>
    <property>
      <contentType>LESS</contentType>
    </property>
    <property>
      <name>LESS</name>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
</xwikidoc>
