<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.2" reference="Diagram.DiagramViewSheet" locale="">
  <web>Diagram</web>
  <name>DiagramViewSheet</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1493741256000</creationDate>
  <parent>Main.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1547804939000</date>
  <contentUpdateDate>1547804939000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity}}
#if ($doc.getObject('Diagram.DiagramClass') || "$!request.source" != '')
  #if ($xcontext.action == 'get' &amp;&amp; $request.data == 'svg')
    #set ($svg = $doc.getValue('svg'))
    #if ("$!svg" == '')
      #set ($svg = '&lt;svg/&gt;')
    #end
    #set ($discard = $response.setContentType('image/svg+xml'))
    #set ($discard = $response.setContentLength($svg.length()))
    #set ($discard = $response.writer.write($svg))
  #elseif ($xcontext.action == 'export')
    #set ($fileName = $doc.name)
    #if ($fileName == 'WebHome')
      #set ($fileName = $doc.documentReference.lastSpaceReference.name)
    #end
    #set ($fileName = "${fileName}.thumbnail.png")
    #set ($diagramURL = $doc.getAttachmentURL($fileName, 'download', "v=$!doc.version"))
    ## Use the svg for export in case the attachment does not exists.
    #if (!$doc.getAttachment($fileName))
      #set ($diagramURL = $doc.getURL('get', "data=svg&amp;v=$!doc.version"))
    #end
    {{html clean="false"}}
      &lt;img src="$diagramURL" alt="$escapetool.xml($doc.plainTitle)" /&gt;
    {{/html}}
  #else
    #set ($discard = $xwiki.ssx.use('Diagram.DiagramSheet'))
    #set ($discard = $xwiki.jsx.use('Diagram.DiagramViewSheet'))
    {{html clean="false"}}
    ## Check if the query contains the parameter for getting the diagram from URL.
    &lt;div class="diagram loading"#if ("$!request.source" == '') data-model="$escapetool.xml($tdoc.content)"
      data-reference="$escapetool.xml($services.model.serialize($tdoc.documentReference, 'default'))"
      data-title="$escapetool.xml($tdoc.plainTitle)"#end&gt;&lt;/div&gt;
    {{/html}}
  #end
#end
{{/velocity}}</content>
  <object>
    <name>Diagram.DiagramViewSheet</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>69dfd116-1fca-4adb-bc13-18701adf194c</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>/*!
#set ($minify = $services.debug.minify != false)
#set ($suffix = "#if ($minify).min#end")
*/
// mxGraph Client Configuration
var mxBasePath = "$services.webjars.url('org.xwiki.contrib:mxgraph-client', '')";
var mxLanguage = '$xcontext.locale';

var mxGraphEditorBasePath = "$services.webjars.url('org.xwiki.contrib:mxgraph-editor', '')";

// Diagram Viewer Configuration
var diagramViewerBasePath = "$services.webjars.url('org.xwiki.contrib:draw.io', '')";
var RESOURCES_PATH = diagramViewerBasePath + 'resources';
var RESOURCE_BASE = RESOURCES_PATH + '/dia';
var STENCIL_PATH = diagramViewerBasePath + 'stencils';
var IMAGE_PATH = diagramViewerBasePath + 'images';
var STYLE_PATH = CSS_PATH = diagramViewerBasePath + 'styles';
var SHAPES_PATH = diagramViewerBasePath + 'shapes';
var GRAPH_IMAGE_PATH = diagramViewerBasePath + 'img';

var urlParams = {};

require.config({
  paths: {
    'mxgraph-init': diagramViewerBasePath + 'js/draw.io.init$suffix',
    'mxgraph-client': mxBasePath + 'mxClient$suffix',
    'sanitizer': mxGraphEditorBasePath + 'sanitizer/sanitizer.min',
    'mxgraph-viewer': mxGraphEditorBasePath + 'mxGraphViewer$suffix',
    'pako': diagramViewerBasePath + 'js/deflate/pako.min',
    // Used by the lightbox.
    'spin': diagramViewerBasePath + 'js/spin/spin.min',
    'draw.io.viewer': diagramViewerBasePath + 'js/draw.io.viewer$suffix',
    'diagram-utils': new XWiki.Document('DiagramSheet', 'Diagram').getURL('jsx', 'minify=$minify')
  },
  shim: {
    'mxgraph-client': ['mxgraph-init'],
    'mxgraph-viewer': ['mxgraph-client', 'sanitizer'],
    'draw.io.viewer': ['mxgraph-viewer', 'pako-global', 'spin-global'],
  },
  map: {
    'diagram-utils': {
      'mxgraph-common': 'mxgraph-viewer'
    }
  }
});

define('pako-global', ['pako'], function(pako) {
  // draw.io expects a global variable.
  window.pako = pako;
});

define('spin-global', ['spin'], function(spin) {
  // draw.io expects a global variable.
  window.Spinner = spin;
});</code>
    </property>
    <property>
      <name>Configuration</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>Diagram.DiagramViewSheet</name>
    <number>1</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>ced6f500-a89d-4048-aa9a-3eeedadad4fc</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>define('diagramViewer', ['jquery', 'diagram-utils', 'draw.io.viewer'], function($, diagramUtils) {
  var getOrigin = function() {
    var origin = window.location.origin;
    if (!origin) {
      var href = window.location.href;
      var hostStart = href.indexOf('://') + 3;
      var pathStart = href.indexOf('/', hostStart);
      origin = pathStart &lt; 0 ? (href + '/') : href.substring(0, pathStart + 1);
    } else {
      origin += '/';
    }
    return origin;
  };

  // This is required for the clipart images.
  GraphViewer.prototype.imageBaseUrl = getOrigin();

  // Fix the diagram printing from the lightbox. mxPrintPreview#addGraphFragment optimizes the diagram rendering when
  // previewing the print by rendering only the shapes that intersect the clip associated with the print page. The
  // computations are wrong in view mode (either when computing the bounding rect of the shapes or the clip of the print
  // page) and it's not easy to spot the problem unfortunately. The consequence is that the print is empty. Disabling
  // the clipping fixes the issue apparently, but we loose the optimization which may cause problems for large diagrams.
  // Note that starting with version 3.9.9 of mxGraph the mxPrintPreview#addGraphFragment function doesn't skip the
  // shapes that don't interset the clip anymore because the return line has been commented out.
  // See https://github.com/jgraph/mxgraph/commit/d5c1345ec946b9d55a9c2a8c1c5df0f154561edf
  mxPrintPreview.prototype.clipping = false;

  var getDiagramViewerConfig = function(diagramContainer) {
    var config = {
      title: diagramContainer.data('title'),
      lightbox: false,
      toolbar: 'zoom layers pages lightbox',
      'toolbar-buttons': {
        edit: {
          title: mxResources.get('edit'),
          image: Editor.editImage
        }
      }
    };
    if (diagramContainer.data('reference')) {
      config.toolbar = 'edit ' + config.toolbar;
      var diagramReference = XWiki.Model.resolve(diagramContainer.data('reference'), XWiki.EntityType.DOCUMENT);
      config.reference = diagramReference;
      var diagramEditURL = new XWiki.Document(diagramReference).getURL('edit');
      config['toolbar-buttons'].edit.handler = function() {
        window.location.href = diagramEditURL;
      };
    }
    var toolbar = diagramContainer.data('toolbar');
    if (toolbar === 'false') {
      delete config.toolbar;
    } else if (typeof toolbar === 'string') {
      config.toolbar = toolbar;
    }
    return config;
  };

  $.fn.viewDiagram = function(configOverride) {
    return this.each(function() {
      var diagramXML = diagramUtils.getDiagramXMLFromURL(window.location.href) || $(this).data('model');
      var diagramRootNode = mxUtils.parseXml(diagramXML).documentElement;
      var config = $.extend(getDiagramViewerConfig($(this)), configOverride);
      var graphViewer = new GraphViewer(this, diagramRootNode, config);
      // Make the diagram title from the tool bar a link to the diagram page.
      if (config.title &amp;&amp; config.reference) {
        var diagramViewURL = new XWiki.Document(config.reference).getURL();
        var diagramLink = $('&lt;a/&gt;').attr('href', diagramViewURL).text(config.title);
        $(graphViewer.toolbar).children().last().empty().append(diagramLink);
      }
    }).removeClass('loading');
  };

  return diagramUtils.loadTranslationAndTheme().done(function(theme) {
    // Configure the default viewer theme.
    Graph.prototype.defaultThemes = Graph.prototype.defaultThemes || {};
    Graph.prototype.defaultThemes[Graph.prototype.defaultThemeName] = theme;
  });
});</code>
    </property>
    <property>
      <name>Diagram Viewer</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>Diagram.DiagramViewSheet</name>
    <number>2</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>6d637857-609d-4122-a9b0-19b51347bcf7</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>require(['jquery', 'diagramViewer'], function($, diagramViewerPromise) {
  diagramViewerPromise.done(function() {
    $('.diagram').viewDiagram();
  });
});</code>
    </property>
    <property>
      <name>Startup</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
</xwikidoc>
